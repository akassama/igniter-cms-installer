class FileInputValidator{constructor(t,e={}){this.defaults={accept:"*",maxSize:5},this.options={...this.defaults,...e},this.acceptTypes={docs:".doc,.docx,.pdf,.txt,.rtf,.odt",images:"image/*",audio:"audio/*,.mp3,.wav,.ogg",video:"video/*,.mp4,.avi,.mov",all:"*/*"},this.options.accept=this.acceptTypes[this.options.accept]||this.options.accept,$(t).each(((t,e)=>{this.initFileInput($(e))}))}initFileInput(t){t.attr("accept",this.options.accept);const e="<p class='text-muted small'>Max file size: "+this.options.maxSize+"MB</p>";let i="";i="*/*"===this.options.accept?'<small class="text-muted small">Allowed file types: All files</small>':`<small class="text-muted small">Allowed file types: ${this.options.accept}</small>`,t.after(i+e),t.on("change",(()=>this.validateFile(t)))}validateFile(t){let e=t.attr("accept").split(","),i=t[0].files;if(i.length>0){let s=!1,l=!1;$.each(i,((t,i)=>{let a=i.type,o=i.name.split(".").pop().toLowerCase();return"*/*"===this.options.accept||e.some((t=>t.trim()===a||t.trim()===`.${o}`||t.trim()===a.split("/")[0]+"/*"))?i.size>1024*this.options.maxSize*1024?(l=!0,!1):void 0:(s=!0,!1)})),s?(alert("Invalid file type selected. Please choose a valid file."),t.val("")):l&&(alert("File size exceeds the maximum allowed size of "+this.options.maxSize+" MB."),t.val(""))}}}